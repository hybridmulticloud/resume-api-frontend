name: Deploy Frontend to S3 (Dynamic API + Secure Bucket)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download API URL artifact
        uses: actions/download-artifact@v4
        with:
          repository: hybridmulticloud/resume-api-backend
          workflow: 'Deploy Backend Infrastructure'
          name: api-url
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: infra-artifacts

      - name: Download CloudFront ID artifact
        uses: actions/download-artifact@v4
        with:
          repository: hybridmulticloud/resume-api-backend
          workflow: 'Deploy Backend Infrastructure'
          name: cloudfront-id
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: infra-artifacts

      - name: Build index.html from template
        run: |
          export API_URL="$(cat infra-artifacts/api-url.txt)"
          envsubst < public/index.tmpl.html > public/index.html

      - name: Export CloudFront distribution ID
        run: echo "CLOUDFRONT_DISTRIBUTION_ID=$(cat infra-artifacts/cloudfront-id.txt)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ secrets.AWS_REGION }}
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Verify S3 bucket exists
        run: aws s3api head-bucket --bucket ${{ secrets.S3_BUCKET_NAME }}

      - name: Sync public/ to S3 via AWS CLI
        run: |
          aws s3 sync public/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "index.html=max-age=0,no-cache,no-store,must-revalidate" \
            --cache-control "*.css=max-age=86400" \
            --cache-control "*.js=max-age=86400"

      - name: Invalidate CloudFront cache via AWS CLI
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths /index.html '/*.css' '/*.js'
