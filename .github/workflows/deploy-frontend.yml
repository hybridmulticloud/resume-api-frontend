name: Deploy Frontend to S3 (Dynamic API + Secure Bucket)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh

      - name: Get Backend Run ID
        id: get_run
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "🔍 Fetching latest backend run..."
          RUN_ID=$(gh run list \
            --repo hybridmulticloud/resume-api-backend \
            --workflow 'Deploy Backend Infrastructure' \
            --branch main \
            --limit 1 \
            --json databaseId \
            --jq '.[0].databaseId')
          echo "➡️  RUN_ID=$RUN_ID"
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Download infra-outputs artifact
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "⬇️  Downloading infra-outputs from run $RUN_ID"
          gh run download \
            "$RUN_ID" \
            --repo hybridmulticloud/resume-api-backend \
            --name infra-outputs \
            --dir infra-artifacts

      - name: Validate downloaded files
        run: |
          for f in frontend_bucket_name.txt cloudfront_distribution_id.txt; do
            if [ ! -f infra-artifacts/$f ]; then
              echo "❌ Missing infra-artifacts/$f" >&2
              exit 1
            fi
          done

      - name: Parse & export bucket name and distribution ID
        run: |
          # Grab only the first field before any ':' (drops debug suffixes)
          BUCKET=$(head -n1 infra-artifacts/frontend_bucket_name.txt  | cut -d ':' -f1 | tr -d '\r\n')
          DIST_ID=$(head -n1 infra-artifacts/cloudfront_distribution_id.txt | cut -d ':' -f1 | tr -d '\r\n')

          echo "🔑 FRONTEND_BUCKET_NAME=$BUCKET"
          echo "🔑 CLOUDFRONT_DIST_ID=$DIST_ID"

          echo "FRONTEND_BUCKET_NAME=$BUCKET"   >> $GITHUB_ENV
          echo "CLOUDFRONT_DIST_ID=$DIST_ID"    >> $GITHUB_ENV

      - name: Build index.html
        run: |
          # Assuming index.tmpl.html references ${API_URL}
          API_URL="https://${FRONTEND_BUCKET_NAME}/UpdateVisitorCount"
          envsubst '${API_URL}' < public/index.tmpl.html > public/index.html

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ secrets.AWS_REGION }}
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync site to S3
        run: |
          aws s3 sync public/ s3://${{ env.FRONTEND_BUCKET_NAME }} \
            --delete \
            --cache-control "index.html=max-age=0,no-cache,no-store" \
            --cache-control "*.css=max-age=86400" \
            --cache-control "*.js=max-age=86400"

      - name: Create CloudFront invalidation
        run: |
          echo "🚀 Invalidating CloudFront distribution ${{ env.CLOUDFRONT_DIST_ID }}"
          aws cloudfront create-invalidation \
            --distribution-id "${{ env.CLOUDFRONT_DIST_ID }}" \
            --paths "/index.html" "/*.css" "/*.js"
