name: Deploy Frontend to S3 (Dynamic API + Secure Bucket)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    # we need a PAT to pull artifacts via GH CLI
    env:
      GH_TOKEN:              ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      AWS_REGION:            ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh

      - name: Get Backend Run ID
        id: get_run
        run: |
          RUN_ID=$(gh run list \
            --repo hybridmulticloud/resume-api-backend \
            --workflow 'Deploy Backend Infrastructure' \
            --branch main \
            --limit 1 \
            --json databaseId \
            --jq '.[0].databaseId')
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Download infra-outputs artifact
        run: |
          gh run download $RUN_ID \
            --repo hybridmulticloud/resume-api-backend \
            --name infra-outputs \
            --dir infra-artifacts

      - name: Validate downloaded files
        run: |
          for f in frontend_bucket_name.txt cloudfront_distribution_id.txt; do
            if [ ! -f infra-artifacts/$f ]; then
              echo "❌ Missing infra-artifacts/$f" >&2
              exit 1
            fi
          done

      - name: Export API_URL & CLOUDFRONT_ID
        run: |
          # strip out anything after the real bucket name (drops debug annotations)
          BUCKET=$(head -n1 infra-artifacts/frontend_bucket_name.txt | cut -d':' -f1)
          DIST_ID=$(head -n1 infra-artifacts/cloudfront_distribution_id.txt | cut -d':' -f1)

          printf "API_URL=https://${BUCKET}/UpdateVisitorCount\n" >> $GITHUB_ENV
          printf "CLOUDFRONT_ID=${DIST_ID}\n"         >> $GITHUB_ENV

      - name: Build index.html
        run: envsubst < public/index.tmpl.html > public/index.html

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Sync site to S3
        run: |
          aws s3 sync public/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "index.html=max-age=0,no-cache,no-store" \
            --cache-control "*.css=max-age=86400" \
            --cache-control "*.js=max-age=86400"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CLOUDFRONT_ID" \
            --paths /index.html '/*.css' '/*.js'
