name: Deploy Frontend to S3 (Dynamic API + Secure Bucket)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      GH_TOKEN:              ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      AWS_REGION:            ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh

      - name: Get Backend Run ID
        id: get_run
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          RUN_ID=$(gh run list \
            --repo hybridmulticloud/resume-api-backend \
            --workflow 'Deploy Backend Infrastructure' \
            --branch main \
            --limit 1 \
            --json databaseId \
            --jq '.[0].databaseId')
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Download infra-outputs artifact
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh run download \
            "$RUN_ID" \
            --repo hybridmulticloud/resume-api-backend \
            --name infra-outputs \
            --dir infra-artifacts

      - name: Validate artifact files
        run: |
          for f in api_gateway_url.txt frontend_bucket_name.txt cloudfront_distribution_id.txt; do
            if [[ ! -f infra-artifacts/$f ]]; then
              echo "❌ Missing infra-artifacts/$f" >&2
              exit 1
            fi
          done

      - name: Parse & export clean values
        run: |
          # Strip anything after the first "::" (debug noise)
          raw_api=$(head -n1 infra-artifacts/api_gateway_url.txt)
          API_URL=$(echo "$raw_api" | sed 's/::.*//' | tr -d '\r\n')

          raw_bucket=$(head -n1 infra-artifacts/frontend_bucket_name.txt)
          FRONTEND_BUCKET_NAME=$(echo "$raw_bucket" | sed 's/::.*//' | grep -Eo '^[A-Za-z0-9.-]+' | tr -d '\r\n')

          raw_dist=$(head -n1 infra-artifacts/cloudfront_distribution_id.txt)
          CLOUDFRONT_DIST_ID=$(echo "$raw_dist" | sed 's/::.*//' | grep -Eo '^[A-Za-z0-9]+' | tr -d '\r\n')

          echo "✅ API_URL:           $API_URL"
          echo "✅ FRONTEND_BUCKET:   $FRONTEND_BUCKET_NAME"
          echo "✅ CLOUDFRONT_DIST_ID: $CLOUDFRONT_DIST_ID"

          echo "API_URL=$API_URL"                        >> $GITHUB_ENV
          echo "FRONTEND_BUCKET_NAME=$FRONTEND_BUCKET_NAME" >> $GITHUB_ENV
          echo "CLOUDFRONT_DIST_ID=$CLOUDFRONT_DIST_ID"   >> $GITHUB_ENV

      - name: Build index.html
        run: |
          envsubst '$API_URL' < public/index.tmpl.html > public/index.html

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region:            ${{ env.AWS_REGION }}
          aws-access-key-id:     ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Sync site to S3
        run: |
          aws s3 sync public/ s3://${FRONTEND_BUCKET_NAME} \
            --delete \
            --cache-control "index.html=max-age=0,no-cache,no-store" \
            --cache-control "*.css=max-age=86400" \
            --cache-control "*.js=max-age=86400"

      - name: Confirm CloudFront distribution
        run: aws cloudfront get-distribution --id $CLOUDFRONT_DIST_ID

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DIST_ID \
            --paths "/index.html" "/*.css" "/*.js"
